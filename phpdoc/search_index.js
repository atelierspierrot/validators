var search_data = {
    'index': {
        'searchIndex': ["validator","validator\\abstractmasksvalidatorhelper","validator\\emailvalidator","validator\\hostnamevalidator","validator\\internetprotocolvalidator","validator\\stringlengthvalidator","validator\\stringmaskvalidator","validator\\validatorinterface","validator\\abstractmasksvalidatorhelper::setmasks","validator\\abstractmasksvalidatorhelper::addmask","validator\\abstractmasksvalidatorhelper::getmasks","validator\\abstractmasksvalidatorhelper::getmask","validator\\emailvalidator::__construct","validator\\emailvalidator::validate","validator\\emailvalidator::sanitize","validator\\emailvalidator::validatelocalpart","validator\\emailvalidator::validatedomainpart","validator\\emailvalidator::setmustpass","validator\\hostnamevalidator::__construct","validator\\hostnamevalidator::validate","validator\\hostnamevalidator::sanitize","validator\\hostnamevalidator::setmustpass","validator\\internetprotocolvalidator::__construct","validator\\internetprotocolvalidator::setversion","validator\\internetprotocolvalidator::validate","validator\\internetprotocolvalidator::sanitize","validator\\stringlengthvalidator::__construct","validator\\stringlengthvalidator::setminlength","validator\\stringlengthvalidator::setmaxlength","validator\\stringlengthvalidator::validate","validator\\stringlengthvalidator::sanitize","validator\\stringmaskvalidator::__construct","validator\\stringmaskvalidator::setmask","validator\\stringmaskvalidator::setmaskreference","validator\\stringmaskvalidator::setpcreoptions","validator\\stringmaskvalidator::setpcredelimiter","validator\\stringmaskvalidator::setpregquote","validator\\stringmaskvalidator::validate","validator\\stringmaskvalidator::sanitize","validator\\validatorinterface::validate","validator\\validatorinterface::sanitize"],
        'info': [["Validator","","Validator.html","","",3],["AbstractMasksValidatorHelper","Validator","Validator\/AbstractMasksValidatorHelper.html","","The application validator model",1],["EmailValidator","Validator","Validator\/EmailValidator.html"," < AbstractMasksValidatorHelper","Email validator",1],["HostnameValidator","Validator","Validator\/HostnameValidator.html"," < AbstractMasksValidatorHelper","Email address validator",1],["InternetProtocolValidator","Validator","Validator\/InternetProtocolValidator.html"," < AbstractMasksValidatorHelper","IP address validator",1],["StringLengthValidator","Validator","Validator\/StringLengthValidator.html"," < AbstractMasksValidatorHelper","String length validator",1],["StringMaskValidator","Validator","Validator\/StringMaskValidator.html","","String mask validator",1],["ValidatorInterface","Validator","Validator\/ValidatorInterface.html","","Validator interface",1],["AbstractMasksValidatorHelper::setMasks","Validator\\AbstractMasksValidatorHelper","Validator\/AbstractMasksValidatorHelper.html#method_setMasks","(array $masks)","Register a new mask set",2],["AbstractMasksValidatorHelper::addMask","Validator\\AbstractMasksValidatorHelper","Validator\/AbstractMasksValidatorHelper.html#method_addMask","(string $mask_name, string $mask)","Register a new mask",2],["AbstractMasksValidatorHelper::getMasks","Validator\\AbstractMasksValidatorHelper","Validator\/AbstractMasksValidatorHelper.html#method_getMasks","()","Get the masks registry",2],["AbstractMasksValidatorHelper::getMask","Validator\\AbstractMasksValidatorHelper","Validator\/AbstractMasksValidatorHelper.html#method_getMask","(string $mask_name)","Get a registered mask",2],["EmailValidator::__construct","Validator\\EmailValidator","Validator\/EmailValidator.html#method___construct","()","Constructor : register usefull masks",2],["EmailValidator::validate","Validator\\EmailValidator","Validator\/EmailValidator.html#method_validate","(string $value, bool $send_errors = false)","Process validation",2],["EmailValidator::sanitize","Validator\\EmailValidator","Validator\/EmailValidator.html#method_sanitize","(<abbr title=\"Validator\\misc\">misc<\/abbr> $value)","Try to make $value pass the validation",2],["EmailValidator::validateLocalPart","Validator\\EmailValidator","Validator\/EmailValidator.html#method_validateLocalPart","(string $value, bool $send_errors = false)","Process local part validation",2],["EmailValidator::validateDomainPart","Validator\\EmailValidator","Validator\/EmailValidator.html#method_validateDomainPart","(string $value, bool $send_errors = false)","Process domain part validation",2],["EmailValidator::setMustPass","Validator\\EmailValidator","Validator\/EmailValidator.html#method_setMustPass","($ref)","",2],["HostnameValidator::__construct","Validator\\HostnameValidator","Validator\/HostnameValidator.html#method___construct","()","Constructor : register usefull masks",2],["HostnameValidator::validate","Validator\\HostnameValidator","Validator\/HostnameValidator.html#method_validate","(string $value, bool $send_errors = false)","Process validation",2],["HostnameValidator::sanitize","Validator\\HostnameValidator","Validator\/HostnameValidator.html#method_sanitize","(<abbr title=\"Validator\\misc\">misc<\/abbr> $value)","Try to make $value pass the validation",2],["HostnameValidator::setMustPass","Validator\\HostnameValidator","Validator\/HostnameValidator.html#method_setMustPass","($ref)","Set the reference to use for validation",2],["InternetProtocolValidator::__construct","Validator\\InternetProtocolValidator","Validator\/InternetProtocolValidator.html#method___construct","($version = null)","Constructor",2],["InternetProtocolValidator::setVersion","Validator\\InternetProtocolValidator","Validator\/InternetProtocolValidator.html#method_setVersion","(string $version)","Set the version of the protocol to use",2],["InternetProtocolValidator::validate","Validator\\InternetProtocolValidator","Validator\/InternetProtocolValidator.html#method_validate","(string $value, bool $send_errors = false)","Process validation",2],["InternetProtocolValidator::sanitize","Validator\\InternetProtocolValidator","Validator\/InternetProtocolValidator.html#method_sanitize","(<abbr title=\"Validator\\misc\">misc<\/abbr> $value)","Try to make $value pass the validation",2],["StringLengthValidator::__construct","Validator\\StringLengthValidator","Validator\/StringLengthValidator.html#method___construct","(<abbr title=\"Validator\\num\">num<\/abbr> $min = null, <abbr title=\"Validator\\num\">num<\/abbr> $max = null)","Constructor : register usefull masks",2],["StringLengthValidator::setMinLength","Validator\\StringLengthValidator","Validator\/StringLengthValidator.html#method_setMinLength","(<abbr title=\"Validator\\num\">num<\/abbr> $min)","Set the minimum string length Minimum length - 1 will",2],["StringLengthValidator::setMaxLength","Validator\\StringLengthValidator","Validator\/StringLengthValidator.html#method_setMaxLength","(<abbr title=\"Validator\\num\">num<\/abbr> $max)","Set the maximum string length Maximum length + 1 will",2],["StringLengthValidator::validate","Validator\\StringLengthValidator","Validator\/StringLengthValidator.html#method_validate","(string $value, bool $send_errors = false)","Process validation",2],["StringLengthValidator::sanitize","Validator\\StringLengthValidator","Validator\/StringLengthValidator.html#method_sanitize","(<abbr title=\"Validator\\misc\">misc<\/abbr> $value)","Try to make $value pass the validation",2],["StringMaskValidator::__construct","Validator\\StringMaskValidator","Validator\/StringMaskValidator.html#method___construct","(<abbr title=\"Validator\\str\">str<\/abbr> $mask = null, <abbr title=\"Validator\\str\">str<\/abbr> $ref = null, array $options = array())","Constructor",2],["StringMaskValidator::setMask","Validator\\StringMaskValidator","Validator\/StringMaskValidator.html#method_setMask","(<abbr title=\"Validator\\str\">str<\/abbr> $mask, bool $protect = null)","Set the mask to test for values The mask can be escaped",2],["StringMaskValidator::setMaskReference","Validator\\StringMaskValidator","Validator\/StringMaskValidator.html#method_setMaskReference","(<abbr title=\"Validator\\str\">str<\/abbr> $ref)","Set the mask reference",2],["StringMaskValidator::setPcreOptions","Validator\\StringMaskValidator","Validator\/StringMaskValidator.html#method_setPcreOptions","(<abbr title=\"Validator\\str\">str<\/abbr> $opts)","Set the PCRE options",2],["StringMaskValidator::setPcreDelimiter","Validator\\StringMaskValidator","Validator\/StringMaskValidator.html#method_setPcreDelimiter","(<abbr title=\"Validator\\str\">str<\/abbr> $delim)","Set the PCRE delimiter",2],["StringMaskValidator::setPregQuote","Validator\\StringMaskValidator","Validator\/StringMaskValidator.html#method_setPregQuote","(bool $protect)","Set the protection on mask",2],["StringMaskValidator::validate","Validator\\StringMaskValidator","Validator\/StringMaskValidator.html#method_validate","(string $value, bool $send_errors = false)","Process validation",2],["StringMaskValidator::sanitize","Validator\\StringMaskValidator","Validator\/StringMaskValidator.html#method_sanitize","(<abbr title=\"Validator\\misc\">misc<\/abbr> $value)","Try to make $value pass the validation",2],["ValidatorInterface::validate","Validator\\ValidatorInterface","Validator\/ValidatorInterface.html#method_validate","(string $value, bool $send_errors = false)","Process validation, must return a boolean",2],["ValidatorInterface::sanitize","Validator\\ValidatorInterface","Validator\/ValidatorInterface.html#method_sanitize","(<abbr title=\"Validator\\misc\">misc<\/abbr> $value)","Try to make $value pass the validation",2]]
    }
}
search_data['index']['longSearchIndex'] = search_data['index']['searchIndex']